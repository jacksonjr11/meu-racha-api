version: '3.9'

networks:
  meu-racha-network:
    driver: bridge
volumes:
  postgresql_data:
  prometheus_data:
  meu_racha_api_data:
  grafana_data:
services:
  app:
    container_name: meu-racha-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run start:dev
    environment:
      NODE_ENV: development
      DB_USER: postgres
      DB_PASSWORD: root
      DB_NAME: meu-racha
      DB_PORT: 5432
      DB_SERVER: db
    depends_on:
      - db
      - jaeger
    networks:
      - meu-racha-network
  db:
    image: postgres
    container_name: meu-racha-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "54320:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - meu-racha-network
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "8081:16686"  # Jaeger UI
      - "4318:4318"
      - "4317:4317"
    networks:
      - meu-racha-network
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - meu-racha-network
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    ports:
      - "4000:4000"
    networks:
      - meu-racha-network